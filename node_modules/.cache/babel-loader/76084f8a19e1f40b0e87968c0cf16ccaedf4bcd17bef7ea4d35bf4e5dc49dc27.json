{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import BoardMulti from\"./BoardMulti\";import ConfettiComponent from\"./Confetti\";import'bootstrap/dist/css/bootstrap.css';import'./TicTacToeMulti.css';import{Link,useParams}from\"react-router-dom\";import{v4 as uuidv4}from'uuid';import{useNavigate}from'react-router-dom';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function TicTacToeMulti(){const{roomId}=useParams();console.log(roomId);const[turnPlayer,setTurnPlayer]=useState(1);const[currentPlayer,setCurrentPlayer]=useState(null);const[playerId,setPlayerId]=useState(localStorage.getItem('playerId')||uuidv4());const[board,setBoard]=useState([[0,0,0],[0,0,0],[0,0,0]]);const[gameOver,setGameOver]=useState(false);const[gameWon,setGameWon]=useState(false);const[winner,setWinner]=useState(0);const[showConfetti,setShowConfetti]=useState(false);const[moves,setMoves]=useState(0);const[messages,setMessages]=useState([]);const ws=useRef(null);const navigate=useNavigate();const url=process.env.REACT_APP_URL;useEffect(()=>{ws.current=new WebSocket(url);ws.current.onopen=()=>{ws.current.send(JSON.stringify({type:'join',room:roomId,playerId}));};ws.current.onmessage=event=>{const data=JSON.parse(event.data);console.log(data);switch(data.type){case'playerNumber':setCurrentPlayer(data.playerNumber);setPlayerId(data.playerId);localStorage.setItem('playerId',data.playerId);break;case'start':console.log(data.message);break;case'update':setBoard(data.board);setTurnPlayer(data.turnPlayer);setMoves(data.newMoveCnt);break;case'gameOver':setBoard(data.board);// Ensure the final board state is shown\nsetGameOver(true);setWinner(data.winner);setGameWon(data.winner!==0);// True if someone won, false if it's a tie\nsetShowConfetti(data.winner===currentPlayer);// Show confetti if the current player won\nbreak;case'message':setMessages(prevMessages=>[...prevMessages,data.text]);break;case'reset':resetLocalGameState();break;case'error':alert(data.message);navigate('/');break;case'syncState':console.log(data);setBoard(data.board);setTurnPlayer(data.turnPlayer);setMoves(data.moves);setGameOver(data.gameOver);setWinner(data.winnerPlayer);setGameWon(data.winnerPlayer!==0);break;default:break;}};return()=>{ws.current.close();};},[roomId,playerId]);const getPlayer=()=>{return currentPlayer;};const boardMove=space=>{const currPlayer=getPlayer();if(currPlayer==null||currPlayer!==turnPlayer){console.log('Move prevented: currentPlayer not set or not player\\'s turn');return;}const row=Math.floor(space/3);const col=space%3;let newBoard=[...board];newBoard[row][col]=currPlayer;setBoard(newBoard);setTurnPlayer(turnPlayer%2+1);ws.current.send(JSON.stringify({type:'move',room:roomId,board:newBoard,turnPlayer:currentPlayer,moveCnt:moves}));};const resetGame=()=>{ws.current.send(JSON.stringify({type:'playAgain',room:roomId,playerId:playerId}));};const sendMessage=playerMessage=>{const text='Player '+currentPlayer+': '+playerMessage;ws.current.send(JSON.stringify({type:'message',room:roomId,text}));};const requestSwitchPlayers=()=>{ws.current.send(JSON.stringify({type:'switchRequest',room:roomId,playerId:playerId}));};const resetLocalGameState=()=>{setTurnPlayer(1);setBoard([[0,0,0],[0,0,0],[0,0,0]]);setGameWon(false);setWinner(0);setShowConfetti(false);setMoves(0);setGameOver(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"TicTacMBG\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome To The Game Room Player \",currentPlayer]}),gameOver?/*#__PURE__*/_jsxs(\"div\",{children:[gameWon?/*#__PURE__*/_jsxs(\"h2\",{children:[\"Player \",winner,\" won!\"]}):/*#__PURE__*/_jsx(\"h2\",{children:\"It's a tie!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mb-2\",onClick:resetGame,children:\"Play Again\"})]}):/*#__PURE__*/_jsxs(\"h2\",{children:[\"Player \",turnPlayer,\"'s turn\"]}),/*#__PURE__*/_jsx(BoardMulti,{board:board,boardMove:boardMove,gameOver:gameOver}),/*#__PURE__*/_jsxs(Link,{to:\"/\",children:[\" \",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mt-2 mb-2\",children:\"Return\"}),\" \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary mt-2 mb-2\",onClick:requestSwitchPlayers,children:\"Switch Player Number\"}),/*#__PURE__*/_jsx(ConfettiComponent,{active:showConfetti}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"p\",{children:msg},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"chatInput\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>sendMessage(document.getElementById('chatInput').value),children:\"Send\"})]})]});}export default TicTacToeMulti;","map":{"version":3,"names":["React","useState","useEffect","useRef","BoardMulti","ConfettiComponent","Link","useParams","v4","uuidv4","useNavigate","jsxs","_jsxs","jsx","_jsx","TicTacToeMulti","roomId","console","log","turnPlayer","setTurnPlayer","currentPlayer","setCurrentPlayer","playerId","setPlayerId","localStorage","getItem","board","setBoard","gameOver","setGameOver","gameWon","setGameWon","winner","setWinner","showConfetti","setShowConfetti","moves","setMoves","messages","setMessages","ws","navigate","url","process","env","REACT_APP_URL","current","WebSocket","onopen","send","JSON","stringify","type","room","onmessage","event","data","parse","playerNumber","setItem","message","newMoveCnt","prevMessages","text","resetLocalGameState","alert","winnerPlayer","close","getPlayer","boardMove","space","currPlayer","row","Math","floor","col","newBoard","moveCnt","resetGame","sendMessage","playerMessage","requestSwitchPlayers","className","children","onClick","to","active","map","msg","index","id","document","getElementById","value"],"sources":["C:/Users/AkashPC/Documents/TicTacToeGameRoom/Frontend/my-app/src/Components/TicTacToeMulti.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport BoardMulti from \"./BoardMulti\";\r\nimport ConfettiComponent from \"./Confetti\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './TicTacToeMulti.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction TicTacToeMulti() {\r\n  const { roomId } = useParams();\r\n  console.log(roomId);\r\n  const [turnPlayer, setTurnPlayer] = useState(1);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [playerId, setPlayerId] = useState(localStorage.getItem('playerId') || uuidv4());\r\n  const [board, setBoard] = useState([\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n  ]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [gameWon, setGameWon] = useState(false);\r\n  const [winner, setWinner] = useState(0);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [moves, setMoves] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n  const ws = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const url = process.env.REACT_APP_URL\r\n\r\n\r\n  useEffect(() => {\r\n    ws.current = new WebSocket(url);\r\n\r\n    ws.current.onopen = () => {\r\n      ws.current.send(JSON.stringify({ type: 'join', room: roomId, playerId }));\r\n    };\r\n\r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(data);\r\n      switch (data.type) {\r\n        case 'playerNumber':\r\n          setCurrentPlayer(data.playerNumber);\r\n          setPlayerId(data.playerId);\r\n          localStorage.setItem('playerId', data.playerId);\r\n          break;\r\n        case 'start':\r\n          console.log(data.message);\r\n          break;\r\n        case 'update':\r\n          setBoard(data.board);\r\n          setTurnPlayer(data.turnPlayer);\r\n          setMoves(data.newMoveCnt)\r\n          break;\r\n        case 'gameOver':\r\n          setBoard(data.board);  // Ensure the final board state is shown\r\n          setGameOver(true);\r\n          setWinner(data.winner);\r\n          setGameWon(data.winner !== 0);  // True if someone won, false if it's a tie\r\n          setShowConfetti(data.winner === currentPlayer);  // Show confetti if the current player won\r\n          break;\r\n        case 'message':\r\n          setMessages((prevMessages) => [...prevMessages, data.text]);\r\n          break;\r\n        case 'reset':\r\n          resetLocalGameState();\r\n          break;\r\n        case 'error':\r\n          alert(data.message);\r\n          navigate('/')\r\n\r\n          break;\r\n        case 'syncState':\r\n          console.log(data)\r\n          setBoard(data.board);\r\n          setTurnPlayer(data.turnPlayer);\r\n          setMoves(data.moves)\r\n          setGameOver(data.gameOver)\r\n          setWinner(data.winnerPlayer)\r\n          setGameWon(data.winnerPlayer !== 0)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      ws.current.close();\r\n    };\r\n  }, [roomId, playerId]);\r\n\r\n  const getPlayer = () => {\r\n    return currentPlayer;\r\n  };\r\n\r\n  const boardMove = (space) => {\r\n    const currPlayer = getPlayer();\r\n    if (currPlayer == null || currPlayer !== turnPlayer) {\r\n      console.log('Move prevented: currentPlayer not set or not player\\'s turn');\r\n      return;\r\n    }\r\n\r\n    const row = Math.floor(space / 3);\r\n    const col = space % 3;\r\n    let newBoard = [...board];\r\n    newBoard[row][col] = currPlayer;\r\n\r\n    setBoard(newBoard);\r\n    \r\n   setTurnPlayer((turnPlayer % 2) + 1)\r\n\r\n    ws.current.send(JSON.stringify({\r\n      type: 'move',\r\n      room: roomId,\r\n      board: newBoard,\r\n      turnPlayer: currentPlayer,\r\n      moveCnt:moves\r\n    }));\r\n  };\r\n\r\n\r\n  const resetGame = () => {\r\n    ws.current.send(JSON.stringify({\r\n      type: 'playAgain',\r\n      room: roomId,\r\n      playerId: playerId,\r\n    }));\r\n  };\r\n\r\n  const sendMessage = (playerMessage) => {\r\n    const text = 'Player ' + currentPlayer + ': '  + playerMessage \r\n    ws.current.send(JSON.stringify({ type: 'message', room: roomId,text }));\r\n  };\r\n\r\n  const requestSwitchPlayers = () => {\r\n    ws.current.send(JSON.stringify({\r\n      type: 'switchRequest',\r\n      room: roomId,\r\n      playerId: playerId,\r\n    }));\r\n  };\r\n\r\n  const resetLocalGameState = () => {\r\n    setTurnPlayer(1);\r\n    setBoard([\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n    ]);\r\n    setGameWon(false);\r\n    setWinner(0);\r\n    setShowConfetti(false);\r\n    setMoves(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"TicTacMBG\">\r\n      <h1>Welcome To The Game Room Player {currentPlayer}</h1>\r\n      {gameOver ? (\r\n        <div>\r\n          {gameWon ? (\r\n            <h2>Player {winner} won!</h2>\r\n          ) : (\r\n            <h2>It's a tie!</h2>\r\n          )}\r\n          <button className=\"btn btn-success mb-2\" onClick={resetGame}>Play Again</button>\r\n        </div>\r\n      ) : (\r\n        <h2>Player {turnPlayer}'s turn</h2>\r\n      )}\r\n      <BoardMulti\r\n        board={board}\r\n        boardMove={boardMove}\r\n        gameOver={gameOver}\r\n      />\r\n      <Link to=\"/\"> <button className=\"btn btn-danger mt-2 mb-2\">Return</button> </Link>\r\n      <button className=\"btn btn-secondary mt-2 mb-2\" onClick={requestSwitchPlayers}>Switch Player Number</button>\r\n      <ConfettiComponent active={showConfetti} />\r\n      <div className=\"chat\">\r\n        <h3>Chat</h3>\r\n        <div className=\"messages\">\r\n          {messages.map((msg, index) => (\r\n            <p key={index}>{msg}</p>\r\n          ))}\r\n        </div>\r\n        <input type=\"text\" id=\"chatInput\" />\r\n        <button className=\"btn btn-primary\" onClick={() => sendMessage(document.getElementById('chatInput').value)}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToeMulti;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}