{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AkashPC\\\\Documents\\\\TicTacToeGameRoom\\\\Frontend\\\\my-app\\\\src\\\\Components\\\\TicTacToeMulti.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport BoardMulti from \"./BoardMulti\";\nimport ConfettiComponent from \"./Confetti\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './TicTacToe.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToeMulti() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [turnPlayer, setTurnPlayer] = useState(1);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [playerId, setPlayerId] = useState(localStorage.getItem('playerId') || uuidv4());\n  const [board, setBoard] = useState([[0, 0, 0], [0, 0, 0], [0, 0, 0]]);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  const [winner, setWinner] = useState(0);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [moves, setMoves] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const ws = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket('ws://localhost:8080');\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        type: 'join',\n        room: roomId,\n        playerId\n      }));\n    };\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      switch (data.type) {\n        case 'playerNumber':\n          setCurrentPlayer(data.playerNumber);\n          setPlayerId(data.playerId);\n          localStorage.setItem('playerId', data.playerId);\n          break;\n        case 'start':\n          console.log(data.message);\n          break;\n        case 'update':\n          setBoard(data.board);\n          setTurnPlayer(data.turnPlayer);\n          break;\n        case 'gameOver':\n          setGameOver(true);\n          setWinner(data.winner);\n          setGameWon(data.winner !== 0);\n          setShowConfetti(data.winner === currentPlayer);\n          break;\n        case 'message':\n          setMessages(prevMessages => [...prevMessages, data.text]);\n          break;\n        case 'reset':\n          // Handle reset from the server\n          setTurnPlayer(1);\n          setBoard([[0, 0, 0], [0, 0, 0], [0, 0, 0]]);\n          setGameWon(false);\n          setWinner(0);\n          setShowConfetti(false);\n          setMoves(0);\n          setGameOver(false);\n          break;\n        case 'error':\n          alert(data.message); // Handle room full error\n          break;\n        default:\n          break;\n      }\n    };\n    return () => {\n      ws.current.close();\n    };\n  }, [roomId, playerId]);\n  const getPlayer = () => {\n    return currentPlayer;\n  };\n  const boardMove = space => {\n    console.log('Attempting move');\n    const currPlayer = getPlayer();\n    if (currPlayer == null) {\n      console.log('Move prevented: currentPlayer not set');\n      return;\n    }\n    if (currPlayer !== turnPlayer) {\n      console.log('Move prevented: not player\\'s turn');\n      return; // Prevent move if it's not the player's turn\n    }\n    const row = Math.floor(space / 3);\n    const col = space % 3;\n    let newBoard = [...board];\n    newBoard[row][col] = currPlayer;\n    setBoard(newBoard);\n    setMoves(moves + 1);\n    let gameWon = false;\n    let winner = 0;\n    if (checkWin(newBoard, currPlayer)) {\n      gameWon = true;\n      winner = currPlayer;\n    } else if (moves + 1 === 9) {\n      gameWon = true;\n    }\n    if (gameWon) {\n      setGameOver(true);\n      setWinner(winner);\n      setShowConfetti(true);\n    }\n    ws.current.send(JSON.stringify({\n      type: 'move',\n      room: roomId,\n      board: newBoard,\n      turnPlayer: turnPlayer % 2 + 1,\n      gameOver: gameWon,\n      winner: winner\n    }));\n  };\n  const checkWin = (board, currPlayer) => {\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] === currPlayer && board[i][1] === currPlayer && board[i][2] === currPlayer || board[0][i] === currPlayer && board[1][i] === currPlayer && board[2][i] === currPlayer) {\n        return true;\n      }\n    }\n    if (board[0][0] === currPlayer && board[1][1] === currPlayer && board[2][2] === currPlayer || board[0][2] === currPlayer && board[1][1] === currPlayer && board[2][0] === currPlayer) {\n      return true;\n    }\n    return false;\n  };\n  const resetGame = () => {\n    // Notify the server that the current player is ready to play again\n    ws.current.send(JSON.stringify({\n      type: 'playAgain',\n      room: roomId,\n      playerId: playerId\n    }));\n  };\n  const sendMessage = text => {\n    ws.current.send(JSON.stringify({\n      type: 'message',\n      room: roomId,\n      text\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TicTacBG\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome To The Game Room Player \", currentPlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [gameWon ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Player \", winner, \" won!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mb-2\",\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Player \", turnPlayer, \"'s turn\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BoardMulti, {\n      board: board,\n      boardMove: boardMove,\n      reset: reset,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mt-2\",\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfettiComponent, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => sendMessage(document.getElementById('chatInput').value),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToeMulti, \"iy2nVXiFYZK6GAeemfOwnjD/Yy0=\", false, function () {\n  return [useParams];\n});\n_c = TicTacToeMulti;\nexport default TicTacToeMulti;\nvar _c;\n$RefreshReg$(_c, \"TicTacToeMulti\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BoardMulti","ConfettiComponent","Link","useParams","v4","uuidv4","jsxDEV","_jsxDEV","TicTacToeMulti","_s","roomId","turnPlayer","setTurnPlayer","currentPlayer","setCurrentPlayer","playerId","setPlayerId","localStorage","getItem","board","setBoard","gameOver","setGameOver","gameWon","setGameWon","winner","setWinner","showConfetti","setShowConfetti","reset","setReset","moves","setMoves","messages","setMessages","ws","current","WebSocket","onopen","send","JSON","stringify","type","room","onmessage","event","data","parse","playerNumber","setItem","console","log","message","prevMessages","text","alert","close","getPlayer","boardMove","space","currPlayer","row","Math","floor","col","newBoard","checkWin","i","resetGame","sendMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","active","map","msg","index","id","document","getElementById","value","_c","$RefreshReg$"],"sources":["C:/Users/AkashPC/Documents/TicTacToeGameRoom/Frontend/my-app/src/Components/TicTacToeMulti.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport BoardMulti from \"./BoardMulti\";\r\nimport ConfettiComponent from \"./Confetti\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './TicTacToe.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction TicTacToeMulti() {\r\n  const { roomId } = useParams();\r\n  const [turnPlayer, setTurnPlayer] = useState(1);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [playerId, setPlayerId] = useState(localStorage.getItem('playerId') || uuidv4());\r\n  const [board, setBoard] = useState([\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n  ]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [gameWon, setGameWon] = useState(false);\r\n  const [winner, setWinner] = useState(0);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [reset, setReset] = useState(false);\r\n  const [moves, setMoves] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    ws.current = new WebSocket('ws://localhost:8080');\r\n  \r\n    ws.current.onopen = () => {\r\n      ws.current.send(JSON.stringify({ type: 'join', room: roomId, playerId }));\r\n    };\r\n  \r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      switch (data.type) {\r\n        case 'playerNumber':\r\n          setCurrentPlayer(data.playerNumber);\r\n          setPlayerId(data.playerId);\r\n          localStorage.setItem('playerId', data.playerId);\r\n          break;\r\n        case 'start':\r\n          console.log(data.message);\r\n          break;\r\n        case 'update':\r\n          setBoard(data.board);\r\n          setTurnPlayer(data.turnPlayer);\r\n          break;\r\n        case 'gameOver':\r\n          setGameOver(true);\r\n          setWinner(data.winner);\r\n          setGameWon(data.winner !== 0);\r\n          setShowConfetti(data.winner === currentPlayer);\r\n          break;\r\n        case 'message':\r\n          setMessages((prevMessages) => [...prevMessages, data.text]);\r\n          break;\r\n        case 'reset': // Handle reset from the server\r\n          setTurnPlayer(1);\r\n          setBoard([\r\n            [0, 0, 0],\r\n            [0, 0, 0],\r\n            [0, 0, 0],\r\n          ]);\r\n          setGameWon(false);\r\n          setWinner(0);\r\n          setShowConfetti(false);\r\n          setMoves(0);\r\n          setGameOver(false);\r\n          break;\r\n        case 'error':\r\n          alert(data.message);  // Handle room full error\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  \r\n    return () => {\r\n      ws.current.close();\r\n    };\r\n  }, [roomId, playerId]);\r\n  \r\n\r\n  const getPlayer = () => {\r\n    return currentPlayer;\r\n  };\r\n\r\n  const boardMove = (space) => {\r\n    console.log('Attempting move');\r\n    const currPlayer = getPlayer();\r\n    if (currPlayer == null) {\r\n      console.log('Move prevented: currentPlayer not set');\r\n      return;\r\n    }\r\n    if (currPlayer !== turnPlayer) {\r\n      console.log('Move prevented: not player\\'s turn');\r\n      return; // Prevent move if it's not the player's turn\r\n    }\r\n\r\n    const row = Math.floor(space / 3);\r\n    const col = space % 3;\r\n    let newBoard = [...board];\r\n    newBoard[row][col] = currPlayer;\r\n\r\n    setBoard(newBoard);\r\n    setMoves(moves + 1);\r\n\r\n    let gameWon = false;\r\n    let winner = 0;\r\n    if (checkWin(newBoard, currPlayer)) {\r\n      gameWon = true;\r\n      winner = currPlayer;\r\n    } else if (moves + 1 === 9) {\r\n      gameWon = true;\r\n    }\r\n    \r\n    if (gameWon) {\r\n      setGameOver(true);\r\n      setWinner(winner);\r\n      setShowConfetti(true);\r\n    } \r\n    \r\n\r\n    ws.current.send(JSON.stringify({\r\n      type: 'move',\r\n      room: roomId,\r\n      board: newBoard,\r\n      turnPlayer: (turnPlayer % 2) + 1,\r\n      gameOver: gameWon,\r\n      winner: winner\r\n    }));\r\n  };\r\n\r\n  const checkWin = (board, currPlayer) => {\r\n    for (let i = 0; i < 3; i++) {\r\n      if (\r\n        (board[i][0] === currPlayer && board[i][1] === currPlayer && board[i][2] === currPlayer) ||\r\n        (board[0][i] === currPlayer && board[1][i] === currPlayer && board[2][i] === currPlayer)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    if (\r\n      (board[0][0] === currPlayer && board[1][1] === currPlayer && board[2][2] === currPlayer) ||\r\n      (board[0][2] === currPlayer && board[1][1] === currPlayer && board[2][0] === currPlayer)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const resetGame = () => {\r\n    // Notify the server that the current player is ready to play again\r\n    ws.current.send(JSON.stringify({\r\n      type: 'playAgain',\r\n      room: roomId,\r\n      playerId: playerId,\r\n    }));\r\n  };\r\n\r\n\r\n  const sendMessage = (text) => {\r\n    ws.current.send(JSON.stringify({ type: 'message', room: roomId, text }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"TicTacBG\">\r\n      <h1>Welcome To The Game Room Player {currentPlayer}</h1>\r\n      {gameOver ? (\r\n        <div>\r\n          {gameWon ? (\r\n            <h2>Player {winner} won!</h2>\r\n          ) : (\r\n            <h2>Game Over</h2>\r\n          )}\r\n          <button className=\"btn btn-success mb-2\" onClick={resetGame}>Play Again</button>\r\n        </div>\r\n      ) : (\r\n        <h2>Player {turnPlayer}'s turn</h2>\r\n      )}\r\n      <BoardMulti\r\n        board={board}\r\n        boardMove={boardMove}\r\n        reset={reset}\r\n        gameOver={gameOver}\r\n      />\r\n      <Link to=\"/\"> <button className=\"btn btn-danger mt-2\">Return</button> </Link>\r\n      <ConfettiComponent active={showConfetti} />\r\n      <div className=\"chat\">\r\n        <h3>Chat</h3>\r\n        <div className=\"messages\">\r\n          {messages.map((msg, index) => (\r\n            <p key={index}>{msg}</p>\r\n          ))}\r\n        </div>\r\n        <input type=\"text\" id=\"chatInput\" />\r\n        <button className=\"btn btn-primary\" onClick={() => sendMessage(document.getElementById('chatInput').value)}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToeMulti;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}